; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt %s -o - -S -O2 | FileCheck %s
; Just check this doesn't crash -- we want some inlining to happen, and then not explode
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

define linkonce_odr void @_ZN4llvm5TwineC2ERKNS_9StringRefE() {
entry:
  %call = call i1 @_ZNK4llvm5Twine7isValidEv()
  br i1 %call, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i1 [ false, %entry ], [ true, %land.rhs ]
  br i1 %0, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end
  br label %cond.end

cond.false:                                       ; preds = %land.end
  call void @__assert_fail()
  unreachable

cond.end:                                         ; preds = %cond.true
  ret void
}

define { i32, ptr } @_ZN4llvm16FileOutputBuffer6commitEl() {
; CHECK-LABEL: @_ZN4llvm16FileOutputBuffer6commitEl(
; CHECK-NEXT:  if.then:
; CHECK-NEXT:    tail call void @__assert_fail()
; CHECK-NEXT:    unreachable
;
if.then:
  call void @_ZN4llvm5TwineC2ERKNS_9StringRefE()
  ret { i32, ptr } zeroinitializer
}

define linkonce_odr i1 @_ZNK4llvm5Twine7isValidEv() {
entry:
  ret i1 false
}

declare void @__assert_fail()
